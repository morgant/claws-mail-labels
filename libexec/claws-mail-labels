#!/bin/sh

#
# claws-mail-labels - Fast-ish Gmail-like labels support for claws-mail
#
# Per-account/mailbox mairix(1) indexes:
#
# - Automatic mairixrc(5) generation
# - Perform full account/mailbox indexing, individually or all
# - Perform per-label/folder indexing
# - List labels/folders for any individual message (by 'Message-ID' header)
#
# Data directories:
#
#   ~/.claws-mail/
#     labelscache/
#       <host>/
#         <mailbox>/
#           mairixrc
#           mairixrc-reindex
#           mairixdb
#
# TODO:
#
# [X] Update list_labels_for_id() to output mailbox-relative label/folder names
#   [X] Update reindex_label() to prepend mailbox path to label name to build MH path for reindexing
# [X] Confirm that current reindex_label() implementation does or doesn't reindex all folders
#   [X] Do we need a separate mairixrc file which has only "mh=$CM_LABELS_FOLDER"?
# [X] Add an '-a' (all) option to use with '-i' (full index) option instead of with '-m' (though support both)
# [-] Add a Makefile

_tool="$(basename "$0")"

_verbose=false
_all_mailboxes=false
_imapcache="${HOME}/.claws-mail/imapcache"
_labelscache="${HOME}/.claws-mail/labelscache"
_log_path="${HOME}/.claws-mail/labelscache.log"
_server="$CM_LABELS_SERVER"
_mailbox="$CM_LABELS_MAILBOX"
_message_path="$CM_LABELS_MESSAGE"

log() {
  _message="$1"

  $_verbose && printf "%s\n" "$_message"

  printf "[%s] %s\n" "$(date "+%Y-%m-%d %H:%M:%S")" "$_message" >>"$_log_path"
}

error() {
  _message="$1"
  _fatal=false

  printf "%s: ERROR! %s\n" "$_tool" "$_message" 1>&2
  printf "[%s] ERROR! %s\n" "$(date "+%Y-%m-%d %H:%M:%S")" "$_message" >>"$_log_path"
  $_fatal && printf "%s: Exiting.\n" "$_tool" && exit 1
}

# parse server & mailbox from a message file's path
parse_message_path_mailbox_server() {
  [ -z "$_message_path" ] && exit 1

  # parse the server from the message file path
  _server="${_message_path##"$_imapcache"/}"
  _server="${_server%%/*}"

  # parse the mailbox from the message file path
  _mailbox="${_message_path##"$_imapcache"/"$_server"/}"
  _mailbox="${_mailbox%%/*}"
}

# list all servers for which mailboxes are indexed
list_servers() {
  find "$_labelscache" -type d -mindepth 1 -maxdepth 1 | while IFS= read -r _line ; do
    [ -n "$_line" ] && basename "$_line"
  done
}

# given a server, list all the mailboxes which are indexed
list_server_mailboxes() {
  [ -z "$_server" ] && exit 1

  find "${_labelscache}/${_server}" -type d -mindepth 1 -maxdepth 1 | while IFS="" read -r _line ; do
    [ -n "$_line" ] && basename "$_line"
  done
}

# given a mailbox, find its IMAP server
find_mailbox_server() {
  [ -z "$_mailbox" ] && exit 1

  # we search imapcache for the server & mailbox because this often happens before mairix configuration
  _mailbox_path="$(find "$_imapcache" -type d -mindepth 2 -maxdepth 2 -iname "$_mailbox")"
  _server="$(basename "${_mailbox_path%%"$_mailbox"}")"
}

mairixrc_path() {
  _variant="$1"
  [ -z "$_server" ] && exit 1
  [ -z "$_mailbox" ] && exit 1

  printf "%s/%s/%s/mairixrc" "$_labelscache" "$_server" "$_mailbox"
  # shellcheck disable=SC3045
  [ -n "$_variant" ] && printf "-%s" "$_variant"
}

mairixdb_path() {
  [ -z "$_server" ] && exit 1
  [ -z "$_mailbox" ] && exit 1

  printf "%s/%s/%s/mairixdb" "$_labelscache" "$_server" "$_mailbox"
}

has_mairixrc() {
  [ -d "$(mairixrc_path)" ] && [ -d "$(mairixrc_path reindex)" ]
}

has_mairixdb() {
  has_mairixrc && [ -d "$(mairixdb_path)" ]
}

init_mairixrc() {
  has_mairixdb && return

  # create the mailbox's labelcache directory structure, if needed
  _mairixrc="$(mairixrc_path)"
  _mairixrc_dir="$(dirname "$_mairixrc")"
  if [ ! -d "$_mairixrc_dir" ] ; then
    log "Creating labelscache directory '$_mairixrc_dir'..."
    if mkdir -p "$_mairixrc_dir" ; then
      log "Successfully created labelscache directory '$_mairixrc_dir'."
    else
      error "Failed to create labelscache directoey '$_mairixrc_dir'!" true
    fi
  fi

  # generate the mailbox's main mairixrc for full indexing of all messages in all folders
  if [ ! -f "$_mairixrc" ] ; then
    log "Generating labelscache mairixrc configuration '$_mairixrc' for indexing..."
    touch "$_mairixrc"
    cat >"$_mairixrc" <<EOF
base=${_imapcache}
mh=${_server}/${_mailbox}...
database=$(mairixdb_path)
mformat=raw
EOF
    if [ $? -lt 1 ] ;then
      log "Successfully generated labelscache mairixrc configuration '$_mairixrc' for indexing."
    else
      error "Failed to generate labelscache mairixrc configuration '$_mairixrc' for indexing!"
    fi
  fi

  # generate the mailbox's mairixrc variant for only indexing messages in a specified folder
  _mairixrc="$(mairixrc_path reindex)"
  if [ ! -f "$_mairixrc" ] ; then
    log "Generating labelscache mairixrc configuration '$_mairixrc' for reindexing..."
    touch "$_mairixrc"
    cat >"$_mairixrc" <<EOF
base=${_imapcache}
mh=\$CM_LABELS_FOLDER
database=$(mairixdb_path)
mformat=raw
EOF
    if [ $? -lt 1 ] ; then
      log "Successfully generated labelscache mairixrc configuration '$_mairixrc' for reindexing."
    else
      error "Failed to generate labelscaceh mairixrc configuration '$_mairixrc' for reindexing!"
    fi
  fi
}

# print usage instructions
usage() {
  printf "Usage: %s [-h] [-v] [[-a | -m mailbox] [-i]] [-f file [-r | -l]]\n" "$_tool"
}

check_usage_conflict_all_mailboxes() {
  _option="$1"
  $_all_mailboxes \
    && printf "%s: The '-%s' option cannot be combined with the '-a' option!\n" "$_tool" "$_option" \
    && usage \
    && exit 2
}

# full index of a mailbox's MH directory, including purging entries
index_mailbox() {
  _fast="${1:-false}"
  _purge="${2:-false}"

  log "Updating labelscache mairix index (full; fast: ${_fast}; purge: ${_purge}) for '${_mailbox}' on '${_server}' (IMAP)..."
  _index_start_time="$(date +%s)"
  # shellcheck disable=SC2046
  if nice mairix -v -f "$(mairixrc_path)" $($_fast && echo '-F') $($_purge && echo '-p') ; then
    _index_elapsed_time="$(( $(date +%s) - _index_start_time ))"
    log "Completed labelscache mairix index (full; fast: ${_fast}; purge: ${_purge}) for '${_mailbox}' on '${_server}' (IMAP) in ${_index_elapsed_time}s."
  else
    _index_elapsed_time="$(( $(date +%s) - _index_start_time ))"
    error "Failed to update labelscache mairix index (full; fast: ${_fast}; purge: ${_purge}) for '${_mailbox}' on '${_server}' (IMAP) after ${_index_elapsed_time}s!"
  fi
}

# full index of _all_ mailboxes for _all_ servers, including purging entries
index_all_mailboxes() {
  log "Indexing to labelscache for all mailboxes..."
  _all_index_start_time="$(date +%s)"
  # shellcheck disable=SC2030
  list_servers | while IFS= read -r _server ; do
    # shellcheck disable=SC2030
    list_server_mailboxes | while IFS= read -r _mailbox ; do
      index_mailbox false true
    done
  done
  _all_index_elapsed_time="$(( $(date +%s) - _all_index_start_time ))"
  log "Completed indexing to labelscache for all mailboxes in ${_all_index_elapsed_time}s."
}

# TODO: fast reindex of just a specific label/folder within an MH directory
reindex_label() {
  _mh_dir="$1"

  # NOTE: This hack seems to cause mairix to consider indexed messages outside of
  # the reindexed folder as "stale"/"dead" in the mairix db, which causes
  # additional indexing overhead for full indexing and/or reindexing other
  # folders because it then reindexes them. In the case of a full index (like
  # one would want to perform after fetching/syncing mail), that means _all_
  # messages except those in the single (non-recursive) folder that was
  # last reindexed will be indexed anew, which is almost as poor performance
  # as just deleting the mairix db... or not indexing at all! :'(
  #
  # I'm committing this as I'm still going to investigate further on the mairix
  # side of things, but this'll probably just get reverted
  export CM_LABELS_FOLDER="$_mh_dir"
  nice mairix -v -f "$(mairixrc_path reindex)" -Q -F
}

reindex_labels_for_message_path() {
  list_labels_for_message_path | while IFS="" read -r _label ; do
    [ -z "$_label" ] && continue
    # shellcheck disable=SC2031
    reindex_label "${_server}/${_mailbox}/${_label}"
  done
}

# print labels/folders which contain the message (by ID)
list_labels_for_id() {
  _message_id="$1"
  # print labels/folders which contain the message
  mairix -f "$(mairixrc_path)" "m:${_message_id}" | while IFS="" read -r _label ; do
    _message_filename="$(basename "$_label")"

    # shellcheck disable=SC2031
    _label_name="${_label##"$_imapcache"/"$_server"/"$_mailbox"/}"
    _label_name="${_label_name%%/"$_message_filename"}"
    printf "%s\n" "$_label_name"
  done
}

# print labels/folders which contain the message
list_labels_for_message_path() {
  [ -z "$_message_path" ] && exit 1

  # parse the Message-ID from the email message file on disk
  _message_id_header="$(grep -Ei "^Message-ID:" "$_message_path")"
  # _message_id="$(echo "$_message_id_header" | sed -E "s/^Message-ID:[[:space:]]+<?([^>[:space:]]+)>?.*$/\1/i")"
  _message_id="$(echo "$_message_id_header" | perl -p -e "s/^Message-ID:\s+<?([^>\s]+)>?.*$/\$1/i")"
  list_labels_for_id "$_message_id"
}

main() {
  while getopts af:hirlm:v _name ; do
    case $_name in
      # help/usage
      h) usage && exit ;;
      # verbose output
      v) _verbose=true ;;
      # process all mailboxes across all servers
      a) _all_mailboxes=true ;;
      # specify mailbox name
      m)
        check_usage_conflict_all_mailboxes "$_name"
        _mailbox="$OPTARG"
        find_mailbox_server
        init_mairixrc
        ;;
        # full index (requires either '-a' or '-m')
      i)
        if $_all_mailboxes ; then
          index_all_mailboxes
        else
          index_mailbox false true
        fi
        ;;
      # parse server & mailbox from message path
      f)
        check_usage_conflict_all_mailboxes "$_name"
        _message_path="$OPTARG"
        parse_message_path_mailbox_server
        ;;
      # list labels for an email message file (requires '-f')
      l)
        check_usage_conflict_all_mailboxes "$_name"
        list_labels_for_message_path
        ;;
      # reindex a specific label/folder (requires '-f')
      r)
        check_usage_conflict_all_mailboxes "$_name"

        # TODO: override reindexing of individual folders with a non-purge, fast, full index of the mailbox
        # until I update mairix to not flag messages in other folders as stale/dead. See:
        # <https://github.com/vandry/mairix/issues/40>
        index_mailbox true
        # reindex_labels_for_message_path
        ;;
      ?) usage && exit 2 ;;
    esac
  done
  shift $(( OPTIND - 1 ))
}

main "$@"
